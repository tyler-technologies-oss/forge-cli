{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "tyler-forge-schema",
  "title": "Tyler Forgeâ„¢ CLI Configuration",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string"
    },
    "srcDirName": {
      "$ref": "#/definitions/srcDirName"
    },
    "libDirName":  {
      "$ref": "#/definitions/libDirName"
    },
    "testDirName":  {
      "$ref": "#/definitions/testDirName"
    },
    "distDirName":  {
      "$ref": "#/definitions/distDirName"
    },
    "buildConfigFileName":  {
      "$ref": "#/definitions/buildConfigFileName"
    },
    "packageConfig": {
      "$ref": "#/definitions/packageConfig"
    },
    "customElementsManifestConfig": {
      "$ref": "#/definitions/customElementsManifestConfig"
    },
    "registry": {
      "$ref": "#/definitions/registry"
    },
    "license": {
      "$ref": "#/definitions/license"
    },
    "build": {
      "$ref": "#/definitions/build"
    },
    "karma": {
      "$ref": "#/definitions/karma"
    },
    "paths": {
      "$ref": "#/definitions/paths"
    }
  },
  "definitions": {
    "srcDirName": {
      "type": "string",
      "description": "The name of the source directory.",
      "default": "src"
    },
    "libDirName": {
      "type": "string",
      "description": "The name of the library directory under [srcDirName].",
      "default": "lib"
    },
    "testDirName": {
      "type": "string",
      "description": "The name of the test directory under [srcDirName].",
      "default": "test"
    },
    "distDirName": {
      "type": "string",
      "description": "The name of the dist directory at the root of the project.",
      "default": "dist"
    },
    "buildConfigFileName": {
      "type": "string",
      "description": "The name of the build configuration file optionally located in each component directory that is used for specifying build options.",
      "default": "build.json"
    },
    "customElementsManifestConfig": {
      "type": "object",
      "description": "The name of the build configuration file optionally located in each component directory that is used for specifying build options.",
      "additionalProperties": false,
      "properties": {
        "configFileName": {
          "type": "string",
          "description": "Optional config file to provide to the analyzer to customize generation of the custom elements manifest."
        },
        "disableAutoGeneration": {
          "type": "boolean",
          "description": "Disables automatic generation of the custom elements manifest as part of the build.",
          "default": "false"
        }
      }
    },
    "packageConfig": {
      "type": "object",
      "description": "Additional package-level configuration.",
      "additionalProperties": false,
      "properties": {
        "copyFiles": {
          "type": "array",
          "description": "Additional files to include in the built package.",
          "items": {
            "type": "object",
            "description": "A copy file descriptor.",
            "additionalProperties": false,
            "required": [
              "pattern",
              "root",
              "output"
            ],
            "properties": {
              "pattern": {
                "type": "string",
                "description": "A file name or glob pattern of files to include."
              },
              "root": {
                "type": "string",
                "description": "The directory relative to project root in which to apply the pattern."
              },
              "output": {
                "type": "string",
                "description": "The target path to copy the file to, relative to the release root directory."
              }
            }
          }
        }
      }
    },
    "license": {
      "type": "object",
      "description": "Information about the license that this project uses for distribution.",
      "additionalProperties": {
        "header": {
          "type": "string",
          "description": "The license header to prepend to built distribution files."
        }
      }
    },
    "build": {
      "type": "object",
      "description": "Specify build override options here.",
      "additionalProperties": false,
      "properties": {
        "static": {
          "description": "Configuration related to building the library into a static directory (typically for static assets usage or deployment)",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether to enable static build or not.",
              "default": false
            },
            "distPath": {
              "type": "string",
              "description": "The path within the `distDir` to generate static build assets to."
            }
          }
        },
        "distributionBundleName": {
          "type": "string",
          "description": "The name of the distribution bundle to generate.",
          "default": "lib.js"
        },
        "tsconfigPath": {
          "description": "Sets the path to the tsconfig file to use.",
          "type": "string"
        },
        "webpack": {
          "description": "Additional options to provide to Webpack during bundling.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "mode": {
              "type": "string",
              "description": "The webpack execution mode.",
              "anyOf": [
                {
                  "const": "production"
                },
                {
                  "const": "development"
                }
              ]
            },
            "libraryTarget": {
              "type": "string",
              "description": "The bundle library style to target."
            },
            "devtool": {
              "type": "object",
              "description": "The devtool to use for sourcemaps.",
              "additionalProperties": false,
              "properties": {
                "production": {
                  "type": "string",
                  "description": "The sourcemap to use for production mode."
                },
                "development": {
                  "type": "string",
                  "description": "The sourcemap to use for development mode."
                }
              }
            },
            "externals": {
              "type": "object",
              "description": "The externals definition for external modules.",
              "additionalProperties": {
                "type": ["string", "object"],
                "description": "The external module names."
              }
            },
            "filename": {
              "type": "string",
              "description": "The name prefix to use for the resulting output file."
            },
            "variableName": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "The name of the global variable to push into the window object at runtime."
                },
                {
                  "type": "array",
                  "description": "An array of variables names that will be nested underneath each other to make up the path to the library.",
                  "default": [],
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "sassLoader": {
              "description": "Provides options to the sass webpack loader.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "webpackImporter": {
                  "description": "Sets whether the default webpack importer is used or not.",
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        },
        "esbuild": {
          "description": "Additional options to provide to esbuild during compilation.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "target": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "The target environment to compile to.",
                  "default": ""
                },
                {
                  "type": "array",
                  "description": "The target environment to compile to.",
                  "default": "",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "supported": {
              "type": "object",
              "description": "The externals definition for external modules.",
              "additionalProperties": {
                "type": ["string", "boolean"],
                "description": "List of JavaScript syntax features to include in the compilation."
              }
            },
            "minify": {
              "type": "boolean",
              "description": "Whether to minify the output or not.",
              "default": true
            },
            "bundle": {
              "type": "boolean",
              "description": "Whether to bundle external dependencies in the output or not.",
              "default": true
            }
          }
        }
      }
    },
    "karma": {
      "description": "Additional options to provide to Karma during testing.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "files": {
          "type": "array",
          "description": "Additional files to pass to Karma",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "stylesheets": {
          "type": "array",
          "description": "Global stylesheets to pass to the sass compiler when building and loading the test environment.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "exclude": {
          "type": "array",
          "description": "List of file paths/glob patterns to exclude from testing compilation.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "coverageThreshold": {
          "type": "object",
          "description": "An object with minimum code coverage thresholds.",
          "additionalProperties": false,
          "properties": {
            "statements": {
              "type": "number",
              "description": "The minimum statement coverage percentage (0 to 100).",
              "default": 50
            },
            "branches": {
              "type": "number",
              "description": "The minimum branch coverage percentage (0 to 100).",
              "default": 50
            },
            "lines": {
              "type": "number",
              "description": "The minimum line coverage percentage (0 to 100).",
              "default": 50
            },
            "functions": {
              "type": "number",
              "description": "The minimum function coverage percentage (0 to 100). Specify a negative number for minimum skipped function count.",
              "default": 50
            }
          }
        }
      }
    },
    "paths": {
      "type": "object",
      "description": "The project item path configuration. This allows for overriding the default location of files and directories within the project.",
      "additionalProperties": false,
      "properties": {
        "root": {
          "type": "string",
          "description": "The root location of the project. All paths are relative to this location.",
          "default": "."
        },
        "distDir": {
          "type": "string",
          "description": "The path to the distribution directory that holds all build output.",
          "default": "dist"
        },
        "distBuildDir": {
          "type": "string",
          "description": "The path to the build directory.",
          "default": "dist/build"
        },
        "distStylesDir": {
          "type": "string",
          "description": "The path to the stylesheet build output directory.",
          "default": "dist/styles"
        },
        "distReleaseDir": {
          "type": "string",
          "description": "The path to the npm package output directory.",
          "default": "dist/release"
        },
        "distMetadataDir": {
          "type": "string",
          "description": "The path to output metadata files.",
          "default": "dist/metadata"
        },
        "srcDir": {
          "type": "string",
          "description": "The path to the source directory.",
          "default": "src"
        },
        "libDir": {
          "type": "string",
          "description": "The path to the component library directory.",
          "default": "src/lib"
        },
        "testDir": {
          "type": "string",
          "description": "The path to the testing directory.",
          "default": "src/test"
        },
        "specDir": {
          "type": "string",
          "description": "The path to the unit testing spec directory.",
          "default": "src/test/spec"
        },
        "stylelintConfigPath": {
          "type": "string",
          "description": "The path to the global stylelint configuration file.",
          "default": ".stylelintrc"
        },
        "webpackConfigPath": {
          "type": "string",
          "description": "The path to the webpack configuration file.",
          "default": "webpack.config.js"
        },
        "karmaConfigPath": {
          "type": "string",
          "description": "The path to the Karma configuration file.",
          "default": "karma.conf.js"
        }
      }
    }
  }
}